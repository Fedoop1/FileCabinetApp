<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CommandHandlers.AppCommandRequest">
            <summary>
            A request class which containing a command and parameters in it.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.AppCommandRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.AppCommandRequest"/> class.
            </summary>
            <param name="command">User entered command.</param>
            <param name="parameters">Parameters to command.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Command">
            <summary>
            Gets the user required command value.
            </summary>
            <value>Command for further processing.
            </value>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Parameters">
            <summary>
            Gets the parameters to required command.
            </summary>
            <value>Parameters to command.
            </value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CommandHandlerBase">
            <summary>
            Abstract class implementing the <see cref="T:FileCabinetApp.Interfaces.ICommandHandler"/> and is the basic class for all <see cref="T:FileCabinetApp.CommandHandlers.CommandHandlerBase"/> inheritance.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlers.CommandHandlerBase.NextHandle">
            <summary>
            Pointer for the next <see cref="T:FileCabinetApp.Interfaces.ICommandHandler"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.SetNext(FileCabinetApp.Interfaces.ICommandHandler)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CommandHandlerExtensions">
            <summary>
            Provides extenstion methods to command handlers classes.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerExtensions.ExtractKeyValuePair(System.String,System.String[])">
            <summary>
            Extracts the key value pair from specified string in two steps, first by split string by separator, last by '=' character.
            </summary>
            <param name="source">The source.</param>
            <param name="separator">The separator.</param>
            <returns>Sorted dictionary from source string.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerExtensions.GeneratePredicate(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Generates the predicate to <see cref="T:FileCabinetApp.FileCabinetRecord"/> according to key-value pair, where key = property name and value = required value in string format.
            </summary>
            <param name="keyValuePair">The key value pair in property-value format.</param>
            <returns>Predicate with target according to key-value pair.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.DeleteCommandHandler">
            <summary>
            Handle "Delete" command to import data from file in special format.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.DeleteCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.DeleteCommandHandler"/> class.
            </summary>
            <param name="service">The <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context is necessary for the correct execution of the methods.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.DeleteCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.DeleteCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.DeleteCommandHandler.Delete(System.String)">
            <summary>
            Removes a record from a data source.
            </summary>
            <param name="parameters">The identifier of the record to be deleted.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExitCommandHandler">
            <summary>
            Handle "exit" command from user input.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService,System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExitCommandHandler"/> class.
            </summary>
            <param name="service"><see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.</param>
            <param name="exitDelegate">Delegate method to remotely control application running status.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ExitCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.Exit">
            <summary>
            A method that produces a safe exit from the application.
            </summary>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExportCommandHandler">
            <summary>
            Handle "export" command from user input.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService,FileCabinetApp.Interfaces.IRecordSnapshotService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExportCommandHandler"/> class.
            </summary>
            <param name="service"><see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.</param>
            <param name="snapshot">Snapshot service.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ExportCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.Export(System.String)">
            <summary>
            Make snapshot and export record list in special format to disk. Supports XML and CSV serialization.
            </summary>
            <param name="parameters">Contain type of export document and filename to save document.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.HelpCommandHandler">
            <summary>
            Handle "help" command from user input.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlers.HelpCommandHandler.HelpMessages">
            <summary>
            The jagged array needed to get help with all the available commands consists of the command name, a short description, and an extended description.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.HelpCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.HelpCommandHandler.PrintHelp(System.String)">
            <summary>
            Method displays all auxiliary information about existing methods, or additional information about a specific method.
            </summary>
            <param name="parameters">Parameter with the choice of a specific command to display help about it.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ImportCommandHandler">
            <summary>
            Handle "import" command to import data from file in special format.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService,FileCabinetApp.Interfaces.IRecordSnapshotService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ImportCommandHandler"/> class.
            </summary>
            <param name="service">The <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context is necessary for the correct execution of the methods.</param>
            <param name="snapshotService">Snapshot service.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ImportCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.Import(System.String)">
            <summary>
            Imports data from a external file.
            </summary>
            <param name="parameters">Includes the data type of the imported file and its path.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.InsertCommandHandler">
            <summary>
            Command handler which process 'Insert' operation.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.InsertCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.InsertCommandHandler"/> class.
            </summary>
            <param name="service"><see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.InsertCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.InsertCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.InsertCommandHandler.Insert(System.String)">
            <summary>
            Create a new <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.MissedCommandHandler">
            <summary>
            Handle <see cref="T:FileCabinetApp.CommandHandlers.AppCommandRequest"/> if no one of the handlers was able to process the request.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.MissedCommandHandler.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.MissedCommandHandler"/> class.
            </summary>
            <param name="availableCommands">The available commands.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.MissedCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.MissedCommandHandler.PrintMissedCommandInfo(System.String)">
            <summary>
            A method that is executed if a non-existent command is selected.
            </summary>
            <param name="command">User invoked command.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler">
            <summary>
            Command handler which process 'Purge' operation.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler"/> class.
            </summary>
            <param name="service">Record service.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.PurgeCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.Purge">
            <summary>
            Compresses and clean up deleted data.
            </summary>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.SelectCommandHandler">
            <summary>
            Command handler class which process 'select' operation.
            </summary>
            <seealso cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase" />
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.SelectCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService,FileCabinetApp.Interfaces.IRecordPrinter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.SelectCommandHandler"/> class.
            </summary>
            <param name="service">Records service.</param>
            <param name="printer">Records printer.</param>
            <exception cref="T:System.ArgumentNullException">Throws when printer is null.</exception>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.SelectCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.SelectCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase">
            <summary>
            Abstract class implementing the <see cref="T:FileCabinetApp.Interfaces.ICommandHandler"/>
            and is the basic class for all <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> inheritance. Contains a protected field on the <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.Service">
            <summary>
            <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="service">A context that will be passed to all inheritors from the abstract class for the correct execution of commands.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.Command">
            <summary>
            Gets the command processed by the handler.
            </summary>
            <value>
            The processed command.
            </value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.StatCommandHandler">
            <summary>
            Handle "stat" command from user input.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.StatCommandHandler"/> class.
            </summary>
            <param name="service"><see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.StatCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandler.Stat">
            <summary>
            A method that displays the number of records in the application.
            </summary>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.UpdateCommandHandler">
            <summary>
            Handle "Update" command from user input.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.UpdateCommandHandler.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.UpdateCommandHandler"/> class.
            </summary>
            <param name="service"><see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> context required for the correct operation of the methods.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.UpdateCommandHandler.Command">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.UpdateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.UpdateCommandHandler.Update(System.String)">
            <summary>
            A method that edits information about a specific record.
            </summary>
            <param name="parameters">A parameter consisting of a unique identifier required to search for a record.</param>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.FileCabinetCsvReader">
            <summary>
            Reads records from a CSV file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetCsvReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetCsvReader"/> class.
            </summary>
            <param name="reader">Destination file stream.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetCsvReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetCsvReader"/> class and save path to destination file.
            </summary>
            <param name="filePath">Destination file path.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetCsvReader.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetCsvReader"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetCsvReader.Load">
            <summary>
            Read all <see cref="T:FileCabinetApp.FileCabinetRecord"/> from the CSV file and add it to <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IList`1"/> representation of records in the CSV file.</returns>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetCsvReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter">
            <summary>
            Create CSV document serialize records data to it.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer"><see cref="T:System.IO.TextWriter"/>Stream to destination file.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="filepath">File path to destination file.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter.Save(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Boolean)">
            <summary>
            Write <see cref="T:FileCabinetApp.FileCabinetRecord"/> sequence to CSV file and save it.
            </summary>
            <param name="source">Contains actual <see cref="T:FileCabinetApp.FileCabinetRecord"/> data.</param>
            <param name="append">Append if <c>true</c>, otherwise recreate file.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordCsvWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter">
            <summary>
            Serialize <see cref="T:FileCabinetApp.FileCabinetRecord"/> data and save it to destination file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter"/> class.
            </summary>
            <param name="writer">Stream to destination file.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter"/> class.
            </summary>
            <param name="filepath">Destination file path.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.Save(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Boolean)">
            <summary>
            Create and Write <see cref="T:FileCabinetApp.FileCabinetRecord"/> source to XML format and save it to destination file.
            </summary>
            <param name="source">Array of <see cref="T:FileCabinetApp.FileCabinetRecord"/>.</param>
            <param name="append">Flag which indicate if file will appended or rewritten.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetRecordXmlLWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.FileCabinetSnapshotService">
            <summary>
            Snapshot class with private information about list of <see cref="T:FileCabinetApp.FileCabinetRecord"/> required for secure serialization.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetSnapshotService.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetSnapshotService"/> class.
            </summary>
            <param name="service">Observable record service.</param>
            <exception cref="T:System.ArgumentNullException">Throws when service is null.</exception>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetSnapshotService.SaveTo(System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetSnapshotService.LoadFrom(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetSnapshotService.AddDataSaver(System.String,System.Func{System.String,FileCabinetApp.Interfaces.IRecordDataSaver})">
            <summary>
            Adds new <see cref="T:FileCabinetApp.Interfaces.IRecordDataSaver"/> provider.
            </summary>
            <param name="fileFormat">The file format.</param>
            <param name="creator">The creator function.</param>
            <exception cref="T:System.ArgumentNullException">Throws when file format is null or empty.</exception>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetSnapshotService.AddDataLoader(System.String,System.Func{System.String,FileCabinetApp.Interfaces.IRecordDataLoader})">
            <summary>
            Adds new <see cref="T:FileCabinetApp.Interfaces.IRecordDataLoader"/> loader provider.
            </summary>
            <param name="fileFormat">The file format.</param>
            <param name="creator">The creator function.</param>
            <exception cref="T:System.ArgumentNullException">Throws when file format is null or empty.</exception>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.FileCabinetXmlReader">
            <summary>
            Class for deserializing <see cref="T:FileCabinetApp.FileCabinetRecord"/> information from XML file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetXmlReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetXmlReader"/> class.
            </summary>
            <param name="reader"><see cref="T:System.IO.TextReader"/> with information about XML format file.</param>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetXmlReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetXmlReader"/> class.
            </summary>
            <param name="filepath">Path to destination file.</param>
            <exception cref="T:System.ArgumentNullException">Throws when path to destination file is null.</exception>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetXmlReader.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.DataTransfer.FileCabinetXmlReader"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetXmlReader.Load">
            <summary>
            Read and deserialize all information from file and return it <see cref="T:System.Collections.Generic.IList`1"/> representation.
            </summary>
            <returns><see cref="T:System.Collections.Generic.IList`1"/> representation of records into XML file.</returns>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.FileCabinetXmlReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:FileCabinetApp.DataTransfer.RecordSnapshot">
            <summary>
            Class DTO that save <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DataTransfer.RecordSnapshot.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DataTransfer.RecordSnapshot"/> class.
            </summary>
            <param name="records">The service records.</param>
        </member>
        <member name="P:FileCabinetApp.DataTransfer.RecordSnapshot.Records">
            <summary>
            Gets the saved records.
            </summary>
            <value>
            Records.
            </value>
        </member>
        <member name="T:FileCabinetApp.Decorators.ServiceLogger">
            <summary>
            Class decorator which wrap instance of <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> and log all information about it activity.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IFileCabinetService" />
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.#ctor(FileCabinetApp.Interfaces.IFileCabinetService,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Decorators.ServiceLogger"/> class.
            </summary>
            <param name="service">The service instance.</param>
            <param name="logger">The logger instance.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when service is null
            or
            Throws when logger is null.
            </exception>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.AddRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.FindByFirstName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.FindByLastName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.FindByDayOfBirth(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.GetRecords(FileCabinetApp.Interfaces.IRecordQuery)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.Restore(FileCabinetApp.DataTransfer.RecordSnapshot)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.DeleteRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceLogger.Purge">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Decorators.ServiceMeter">
            <summary>
            Decorator that wrap instance of <see cref="T:FileCabinetApp.Interfaces.IFileCabinetService"/> and add profiling to it.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IFileCabinetService" />
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.#ctor(FileCabinetApp.Interfaces.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Decorators.ServiceMeter"/> class.
            </summary>
            <param name="service">Record service.</param>
            <exception cref="T:System.ArgumentNullException">Throws when record service is null.</exception>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.AddRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.FindByFirstName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.FindByLastName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.FindByDayOfBirth(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.GetRecords(FileCabinetApp.Interfaces.IRecordQuery)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.Restore(FileCabinetApp.DataTransfer.RecordSnapshot)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.DeleteRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.Decorators.ServiceMeter.Purge">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>
            Organizes work through a <see cref="T:System.IO.FileStream"/> in a byte format. Is an alternative of <see cref="T:FileCabinetApp.FileCabinetMemoryService"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.String,FileCabinetApp.Interfaces.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class and set the file stream instance.
            </summary>
            <param name="fileName">Storage file name.</param>
            <param name="validator">Record validator.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.AddRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByDayOfBirth(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords(FileCabinetApp.Interfaces.IRecordQuery)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.DataTransfer.RecordSnapshot)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.DeleteRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Purge">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RecordToByteConverter(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Convert <see cref="T:FileCabinetApp.FileCabinetRecord"/> to byte representation.
            </summary>
            <param name="record">Record for conversion.</param>
            <returns>The byte array with byte representation of record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.StringToBytes(System.String)">
            <summary>
            Convert string to bytes representation.
            </summary>
            <param name="text">String to convert.</param>
            <returns>Byte array of string.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.BytesToString(System.Byte[])">
            <summary>
            Convert byte array to to string representation.
            </summary>
            <param name="byteName">Source array.</param>
            <returns>String result.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>
            Class which work with records in memory and provide all operations for this.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.Interfaces.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">Record validator.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByDayOfBirth(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords(FileCabinetApp.Interfaces.IRecordQuery)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetStat">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.DataTransfer.RecordSnapshot)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Purge">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.DeleteRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.DictionaryAdd(FileCabinetApp.FileCabinetRecord)">
            <summary>
            An internal method that calls data updates in dictionaries.
            </summary>
            <param name="record">Record to add.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.DictionaryRemove(FileCabinetApp.FileCabinetRecord)">
            <summary>
            An internal method that calls data deletion in dictionaries.
            </summary>
            <param name="record">The record to be removed from the dictionaries.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Class which representing standard, POCO record.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets the id field.
            </summary>
            <value>
            Id property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Height">
            <summary>
            Gets the height field.
            </summary>
            <value>
            Height property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Money">
            <summary>
            Gets the money field.
            </summary>
            <value>
            Money property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Gender">
            <summary>
            Gets the gender field.
            </summary>
            <value>
            Gender property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or the first name field.
            </summary>
            <value>
            First name property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets the last name field.
            </summary>
            <value>
            Last name property.
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets the date of birth field.
            </summary>
            <value>
            Date of birth property.
            </value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.ToString">
            <summary>
            Overriding the ToString() method.
            </summary>
            <returns>Returns an overridden version of the ToString() method.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
              <see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.Equals(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
              <see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="T:FileCabinetApp.Interfaces.ICommandHandler">
            <summary>
            Interface which describe basic behavior to command handler classes that handle user input commands.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.ICommandHandler.SetNext(FileCabinetApp.Interfaces.ICommandHandler)">
            <summary>
            Set pointer for the next <see cref="T:FileCabinetApp.Interfaces.ICommandHandler"/>.
            </summary>
            <param name="commandHandler">Next command handler.</param>
        </member>
        <member name="M:FileCabinetApp.Interfaces.ICommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Try to handle command request. Otherwise pass it further along the chain.
            </summary>
            <param name="commandRequest">Command with parameters.</param>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IFileCabinetService">
            <summary>
            The interface includes all the methods common to the classes inherited from FileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.AddRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Adds the record.
            </summary>
            <param name="record">The record.</param>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Finds the record by first name.
            </summary>
            <param name="firstName">The first name.</param>
            <returns>The sequence of records that satisfy the condition.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.FindByLastName(System.String)">
            <summary>
            Finds the record by last name.
            </summary>
            <param name="lastName">The last name.</param>
            <returns>The sequence of records that satisfy the condition.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.FindByDayOfBirth(System.String)">
            <summary>
            Finds the record by day of birth.
            </summary>
            <param name="dateOfBirth">The date of birth.</param>
            <returns>The sequence of records that satisfy the condition.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Editing data in the record.
            </summary>
            <param name="record">Updated record.</param>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.GetRecords">
            <summary>
            Returns sequence of stored records.
            </summary>
            <returns>Sequence of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.GetRecords(FileCabinetApp.Interfaces.IRecordQuery)">
            <summary>
            Returns the collection of records selected by <see cref="T:FileCabinetApp.Interfaces.IRecordQuery"/>.
            </summary>
            <param name="query">The query.</param>
            <returns>The sequence of records that satisfy the condition.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.MakeSnapshot">
            <summary>
            Returns actual records in <see cref="T:FileCabinetApp.DataTransfer.RecordSnapshot"/> format.
            </summary>
            <returns>Service snapshot.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.Restore(FileCabinetApp.DataTransfer.RecordSnapshot)">
            <summary>
            Restores the specified records from service snapshot.
            </summary>
            <param name="restoreSnapshot">The restore snapshot.</param>
            <returns>Count of restored records.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.GetStat">
            <summary>
            Get the count of existing and deleted <see cref="T:FileCabinetApp.FileCabinetRecord"/>'s.
            </summary>
            <returns>The count of existing and deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.DeleteRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Removes a record from service.
            </summary>
            <param name="record">Record to delete.</param>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IFileCabinetService.Purge">
            <summary>
            Optimize records memory by cleaning deleted records and defragmentate memory into one contiguous block.
            </summary>
            <returns>Removal result.</returns>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordDataLoader">
            <summary>
            Determine methods to services that load data from storage.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordDataLoader.Load">
            <summary>
            Loads data from storage.
            </summary>
            <returns>Sequence of load data.</returns>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordDataSaver">
            <summary>
            Determine methods to services that save data to storage.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordDataSaver.Save(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Boolean)">
            <summary>
            Save data to storage.
            </summary>
            <param name="source">The source of records.</param>
            <param name="append">Append storage if set to <c>true</c>, otherwise rewrite.</param>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordPrinter">
            <summary>
            Interface provides method to printer providers which write sequence of <see cref="T:FileCabinetApp.FileCabinetRecord"/> to destination stream.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordPrinter.Print(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            Prints source to destination file with using specified select method according to selected fields.
            </summary>
            <param name="source">Records source.</param>
            <param name="selectedFields">Collection of selected fields.</param>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordQuery">
            <summary>
            Expose record query contract.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IRecordQuery.Predicate">
            <summary>
            Gets the predicate according to select query.
            </summary>
            <value>
            Predicate instance.
            </value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IRecordQuery.QueryHashCode">
            <summary>
            Gets the hash code of the query.
            </summary>
            <value>
            Query's hash code.
            </value>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordSnapshotService">
            <summary>
            Interface for services which work with <see cref="T:FileCabinetApp.FileCabinetRecord"/> and process IO operations with them.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordSnapshotService.SaveTo(System.String,System.String,System.Boolean)">
            <summary>
            Saves records in special record format to destination file.
            </summary>
            <param name="fileFormat">The file format.</param>
            <param name="filePath">The file path.</param>
            <param name="append">if set to <c>true</c> append destination file, otherwise rewrite it.</param>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordSnapshotService.LoadFrom(System.String,System.String)">
            <summary>
            Loads records from destination file and save it.
            </summary>
            <param name="fileFormat">The file format.</param>
            <param name="filePath">The file path.</param>
            <returns>Loaded records snapshot.</returns>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IRecordValidator">
            <summary>
            The interface required to validate the parameters in accordance with the selected rules.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Interfaces.IRecordValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validates the record be specified rules.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Result of validating.</returns>
        </member>
        <member name="T:FileCabinetApp.Interfaces.IValidationSettings">
            <summary>
            Interface which describe behavior of validation settings to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.FirstName_Max">
            <summary>
            Gets or sets max length of first name to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Maximum length of first name.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.FirstName_Min">
            <summary>
            Gets or sets min length of first name to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Minimum first name length.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.LastName_Max">
            <summary>
            Gets or sets max length of last name to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Maximum last name length.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.LastName_Min">
            <summary>
            Gets or sets min length of last name to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Minimum last name length.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.DateOfBirth_From">
            <summary>
            Gets or sets minimal date of date of birth to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Minimum birth date.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.DateOfBirth_To">
            <summary>
            Gets or sets maximum date of date of birth to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Maximum birth date.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.Height_Min">
            <summary>
            Gets or sets min height to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Minimum height.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.Height_Max">
            <summary>
            Gets or sets max height to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            Maximum height.
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.Money_Min">
            <summary>
            Gets or sets min amount of money to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Minimum amount of money.</value>
        </member>
        <member name="P:FileCabinetApp.Interfaces.IValidationSettings.Money_Max">
            <summary>
            Gets or sets max amount of money to <see cref="T:FileCabinetApp.FileCabinetRecord"/>.
            </summary>
            <value>Maximum amount of money.</value>
        </member>
        <member name="M:FileCabinetApp.Program.Configure(System.String[])">
            <summary>
            A method that accepts command line parameters to control the check rules depending on the passed argument.
            </summary>
            <param name="parameters">An array of arguments passed to the Main method.</param>
        </member>
        <member name="T:FileCabinetApp.RecordPrinters.DefaultPrinter">
            <summary>
            Class which prints information to destination stream in ToString() format.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IRecordPrinter" />
        </member>
        <member name="M:FileCabinetApp.RecordPrinters.DefaultPrinter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordPrinters.DefaultPrinter"/> class.
            </summary>
            <param name="destinationStream">Destination stream.</param>
            <exception cref="T:System.ArgumentNullException">Throws when destination source is null.</exception>
        </member>
        <member name="M:FileCabinetApp.RecordPrinters.DefaultPrinter.Print(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            Prints source to destination file with using specified select method according to selected fields in ToString() format.
            </summary>
            <param name="source">Records source.</param>
            <param name="selectedFields">Collection of selected fields.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when source is null
            or
            Collection of selected fields is null.
            </exception>
        </member>
        <member name="T:FileCabinetApp.RecordPrinters.TablePrinter">
            <summary>
            Class which prints information to destination stream in table format format, where properties is headers of the table and source data is rows.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IRecordPrinter" />
        </member>
        <member name="M:FileCabinetApp.RecordPrinters.TablePrinter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordPrinters.TablePrinter"/> class.
            </summary>
            <param name="writer">The destination stream.</param>
            <exception cref="T:System.ArgumentNullException">Throws when writer is null.</exception>
        </member>
        <member name="M:FileCabinetApp.RecordPrinters.TablePrinter.Print(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.RecordQuery">
            <summary>
            Represent a instance of record query.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IRecordQuery" />
            <seealso cref="T:FileCabinetApp.RecordQuery" />
        </member>
        <member name="M:FileCabinetApp.RecordQuery.#ctor(System.Predicate{FileCabinetApp.FileCabinetRecord},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordQuery"/> class.
            </summary>
            <param name="predicate">Predicate.</param>
            <param name="queryString">Hash code.</param>
            <exception cref="T:System.ArgumentNullException">
            Throws when predicate is null
            or
            Throws when hash code is null.
            </exception>
        </member>
        <member name="P:FileCabinetApp.RecordQuery.Predicate">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.RecordQuery.QueryHashCode">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.CompositeValidator">
            <summary>
            Class that composite all the necessary validations rules inside and validate record according to them.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.Interfaces.IRecordValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.CompositeValidator"/> class.
            </summary>
            <param name="validators">List of <see cref="T:FileCabinetApp.Interfaces.IRecordValidator"/> which the input data will be checked.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.DateOfBirthValidator">
            <summary>
            Class which validate incoming date of birth value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.DateOfBirthValidator"/> class.
            </summary>
            <param name="minDateOfBirth">The minimum allowed date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.DateOfBirthValidator"/> class.
            </summary>
            <param name="minDateOfBirth">The minimum date of birth.</param>
            <param name="maxDateOfBirth">The maximum date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.FirstNameValidator">
            <summary>
            Class which validate incoming first name value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.FirstNameValidator"/> class.
            </summary>
            <param name="minNameLength">Minimum name length value.</param>
            <param name="maxNameLength">Maximum name length value.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.GenderValidator">
            <summary>
            Class which validate incoming gender value.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Validators.GenderValidator.validGenderArray">
            <summary>
            An array of valid values for gender.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.GenderValidator.#ctor(System.Char[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.GenderValidator"/> class.
            </summary>
            <param name="validGenderArray">An array of valid values for gender.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.GenderValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.HeightValidator">
            <summary>
            Class which validate incoming height value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.HeightValidator.#ctor(System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.HeightValidator"/> class.
            </summary>
            <param name="minHeight">The minimum value is the height of the growth.</param>
            <param name="maxHeight">The maximum value is the height of growth.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.HeightValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.LastNameValidator">
            <summary>
            Check the incoming last name value.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.LastNameValidator"/> class.
            </summary>
            <param name="minNameLength">The minimum length of the last name.</param>
            <param name="maxNameLength">The maximum length of the last name.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.MoneyValidator">
            <summary>
            Validate the incoming amount of money.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.MoneyValidator.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.MoneyValidator"/> class.
            </summary>
            <param name="minMoney">The minimal amount of money.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.MoneyValidator.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.MoneyValidator"/> class.
            </summary>
            <param name="minMoney">The minimum amount of money.</param>
            <param name="maxMoney">The maximum amount of money.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.MoneyValidator.ValidateRecord(FileCabinetApp.FileCabinetRecord)">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidationSettings">
            <summary>
            Class that contains all boundary values to validation rules.
            </summary>
            <seealso cref="T:FileCabinetApp.Interfaces.IValidationSettings" />
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.FirstName_Min">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.FirstName_Max">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.LastName_Min">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.LastName_Max">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.DateOfBirth_From">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.DateOfBirth_To">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.Height_Min">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.Height_Max">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.Money_Min">
            <inheritdoc/>
        </member>
        <member name="P:FileCabinetApp.Validators.ValidationSettings.Money_Max">
            <inheritdoc/>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidatorBuilder">
            <summary>
            Create validation methods and composite it to <see cref="T:FileCabinetApp.Validators.CompositeValidator"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.ValidatorBuilder"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.CreateValidator(FileCabinetApp.Interfaces.IValidationSettings)">
            <summary>
            Creates the validator with validation rules according to specified configuration.
            </summary>
            <param name="settings">The settings.</param>
            <returns>Record validator.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when validation settings is null.</exception>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateFirstName(System.Int32,System.Int32)">
            <summary>
            Add first name validator to validators list.
            </summary>
            <param name="minFirstNameLength">The minimum length of the first name.</param>
            <param name="maxFirstNameLength">The maximum length of the first name.</param>
            <returns>Instance of validator builder with first name validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateLastName(System.Int32,System.Int32)">
            <summary>
            Add last name validator to validators list.
            </summary>
            <param name="minLastNameLength">The minimum length of the last name.</param>
            <param name="maxLastNameLength">The maximum length of the last name.</param>
            <returns>Instance of validator builder with last name validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateDateOfBirth(System.DateTime,System.DateTime)">
            <summary>
            Add date of birth validator to validators list.
            </summary>
            <param name="minDateOfBirth">The minimum date of birth.</param>
            <returns>Instance of validator builder with date of birth validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateHeight(System.Int16,System.Int16)">
            <summary>
            Add height validator to validators list.
            </summary>
            <param name="minHeight">The minimum available height.</param>
            <param name="maxHeight">The maximum available height.</param>
            <returns>Instance of validator builder with height validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateMoney(System.Decimal,System.Decimal)">
            <summary>
            Add money validator to validators list.
            </summary>
            <param name="minMoney">The minimum amount of money.</param>
            <returns>Instance of validator builder with money validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateGender(System.Char[])">
            <summary>
            Add gender validator to validators list.
            </summary>
            <param name="validGenderArray">Array of valid genders.</param>
            <returns>Instance of validator builder with gender validator in validators list.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.Create">
            <summary>
            Create new instance of <see cref="T:FileCabinetApp.Validators.CompositeValidator"/> with the list of validators.
            </summary>
            <returns>New instance of <see cref="T:FileCabinetApp.Validators.CompositeValidator"/> with the list of validators.</returns>
        </member>
    </members>
</doc>
